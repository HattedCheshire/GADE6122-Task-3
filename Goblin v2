using System;
using System.Collections.Generic;
using System.Text;

namespace GADE6122_Task_2_21757948
{
    //Create Goblin class that inherits from the Enemy class 
    class Goblin : Enemy
    {
        Character character;
        //Create constructor for class Goblin
        public Goblin(int x, int y) : base(x, y, 'G', 10, 1, 1)
        {
            //Question 3.2
            weapon = new MeleeWeapon(-1, -1, 'D', Weapon.Weapontypeenum.Dagger);            
            EquipWeapon(Weapon.Weapontypeenum.Dagger);
        }
        //Create an overridden ReturnMove method
        public override MovementEnum ReturnMove(MovementEnum move)
        {
            switch (move)
            {
                case MovementEnum.NoMovement:
                    //Character doesn't move
                    return MovementEnum.NoMovement;
                case MovementEnum.Up:
                    //The Goblin wants to move up
                    //Check to see if the tile the Goblin wants to move to is Empty
                    if (characterVision[0].GetType() == typeof(EmptyTile))
                    {
                        //The Goblin moves up
                        return MovementEnum.Up;
                    }
                    //Character doesn't move
                    else return MovementEnum.NoMovement;
                case MovementEnum.Right:
                    //The Goblin wants to move right
                    //Check to see if the tile the Goblin wants to move to is Empty
                    if (characterVision[1].GetType() == typeof(EmptyTile))
                    {
                        //The Goblin moves right
                        return MovementEnum.Right;
                    }
                    //Character doesn't move
                    else return MovementEnum.NoMovement;
                case MovementEnum.Down:
                    //The Goblin wants to move down
                    //Check to see if the tile the Goblin wants to move to is Empty
                    if (characterVision[2].GetType() == typeof(EmptyTile))
                    {
                        //The Goblin moves down
                        return MovementEnum.Down;
                    }
                    //Character doesn't move
                    else return MovementEnum.NoMovement;
                case MovementEnum.Left:
                    //The Goblin wants to move left
                    //Check to see if the tile the Goblin wants to move to is Empty
                    if (characterVision[3].GetType() == typeof(EmptyTile))
                    {
                        //The Goblin moves left
                        return MovementEnum.Left;
                    }
                    //Character doesn't move
                    else return MovementEnum.NoMovement;
            }
            //Character doesn't move
            return MovementEnum.NoMovement;
        }
        
        //Create an overridden ToString method to add Goblin to the Enemy's stats
        public override string ToString()
        {
            return "Goblin" + base.ToString();
        }
    }
}
